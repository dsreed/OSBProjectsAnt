<?xml version="1.0" encoding="windows-1252" ?>
<project name="ConfigExport">

   <property file="./build.properties"/>

   <property name="metadata.dir" value="${workspace.dir}/.metadata"/>
   <property name="task.failonerror"               value="true" />
   <property name="task.errorproperty"             value="" />

   <property name="domain.export.script" value="export.py" />
   <property name="domain.import.script" value="import.py" />
   <property name="settingsFile" location="osb_export.xml"/>

    <path id="library.osb">
       <fileset dir="${eclipse.home}/common/modules">
         <include name="com.bea.common.configfwk_1.3.0.0.jar"/>
       </fileset>
       <fileset dir="${weblogic.home}/server/lib">
         <include name="weblogic.jar"/>
       </fileset>
       <fileset dir="${osb.home}/lib">
         <include name="servicebus.jar"/>
       </fileset>
    </path>
	
	<path id="configjar.path">
	    <fileset dir="${osb.home}/tools/configjar">
         <include name="configjar.jar"/>
        </fileset>
		<fileset dir="${weblogic.home}/modules">
         <include name="com.bea.core.xml.xmlbeans.jar"/>
        </fileset>
    </path>
	
	<taskdef name="configjar"
	         classpathref="configjar.path" 
             classname="com.bea.alsb.tools.configjar.ant.ConfigJarTask"/>
			 
			 
   <taskdef name="wlst" 
            classpathref="library.osb" 
            classname="weblogic.ant.taskdefs.management.WLSTTask"/>
	




   <target name="exportFromOSB">
        <wlst fileName="${domain.export.script}" debug="true" failOnError="false"  classpathref="library.osb" 
              arguments="${wls.username} ${wls.password} ${wls.server} ${export.project} ${export.jar} ${export.customFile}">  
         <script>  
           adminUser=sys.argv[1]  
           adminPassword=sys.argv[2]  
           adminUrl=sys.argv[3]

           exportJar = sys.argv[5]
           customFile = sys.argv[6]
           passphrase = "osb"
           project = sys.argv[4]

           connect(adminUser,adminPassword,adminUrl) 
           domainRuntime()
          </script>
        </wlst>
   </target>

   <target name="importToOSB">
        <wlst fileName="${domain.import.script}" debug="true" failOnError="false" classpathref="library.osb"  
              arguments="${wls.username} ${wls.password} ${wls.server} ${import.project} ${import.jar} ${import.customFile}">  
         <script>  
           adminUser=sys.argv[1]  
           adminPassword=sys.argv[2]  
           adminUrl=sys.argv[3]

           passphrase = "osb"

           project=sys.argv[4]
           importJar=sys.argv[5]
           customFile=sys.argv[6]

           connect(adminUser,adminPassword,adminUrl) 
           domainRuntime()
          </script>
        </wlst>
   </target>



  <!--target name="exportFromWorkspace">
      <delete failonerror="false" includeemptydirs="true"
              dir="${metadata.dir}"/>
      <java dir="${osb.home}/lib" classpathref="library.osb"
            jar="${eclipse.home}/plugins/org.eclipse.equinox.launcher_1.2.0.v20110502.jar"
            fork="true" failonerror="true" maxmemory="768m">
         <jvmarg line="-XX:MaxPermSize=256m"/>   
         <arg line="-data ${workspace.dir}"/>
         <arg line="-application com.bea.alsb.core.ConfigExport"/>
         <arg line="-configProject ${config.project}"/>
         <arg line="-configJar ${config.jar}"/>
         <arg line="-configSubProjects ${config.subprojects}"/>
         <arg line="-includeDependencies ${config.includeDependencies}"/>
         <sysproperty key="weblogic.home" value="${weblogic.home}"/>
         <sysproperty key="osb.home" value="${osb.home}"/>
         <sysproperty key="osgi.bundlefile.limit" value="500"/>
         <sysproperty key="harvester.home" value="${osb.home}/harvester"/>
         <sysproperty key="osgi.nl" value="en_US"/>
         <sysproperty key="sun.lang.ClassLoader.allowArraySyntax" value="true"/>
         <sysproperty key="osgi.bundlefile.limit" value="750"/>
         <sysproperty key="middleware.home" value="${fmw.home}"/>
      </java>
   </target-->   
     
        
    

    <target name="exportFromWorkspace">
        <fail unless="settingsFile"/>
        <configjar failonerror="${task.failonerror}"
                   errorProperty="${task.errorproperty}"
                   settingsFile="${settingsFile}">
        </configjar>
    </target>


</project>
